"""empty message

Revision ID: 924e44e6ca9c
Revises: 7b40d597efd0
Create Date: 2021-01-17 02:51:47.648052

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '924e44e6ca9c'
down_revision = '7b40d597efd0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('hostels')
    op.drop_table('departments')
    op.drop_table('library')
    op.drop_table('exams')
    op.drop_table('accommodation')
    op.drop_table('users')
    op.drop_table('certificates')
    op.drop_table('checklist')
    op.drop_table('institutions')
    op.drop_table('subjects')
    op.drop_table('campuses')
    op.drop_table('notifications')
    op.drop_table('fees')
    op.drop_table('units')
    op.drop_table('academic_year')
    op.drop_table('courses')
    op.drop_table('apply_course')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('apply_course',
    sa.Column('application_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('student', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('institution', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('campus', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('certificate', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('department', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('course', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['campus'], ['campuses.campus_id'], name='apply_course_campus_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['certificate'], ['certificates.certificate_id'], name='apply_course_certificate_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['course'], ['courses.course_name'], name='apply_course_course_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['department'], ['departments.department_name'], name='apply_course_department_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['institution'], ['institutions.institution_name'], name='apply_course_institution_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student'], ['users.admission_no'], name='apply_course_student_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('application_id', name='apply_course_pkey')
    )
    op.create_table('courses',
    sa.Column('course_id', sa.INTEGER(), server_default=sa.text("nextval('courses_course_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('course_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('department', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['department'], ['departments.department_name'], name='courses_department_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('course_id', name='courses_pkey'),
    sa.UniqueConstraint('course_name', name='courses_course_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('academic_year',
    sa.Column('year_id', sa.INTEGER(), server_default=sa.text("nextval('academic_year_year_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('year', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('semester', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('year_id', name='academic_year_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('units',
    sa.Column('unit_id', sa.INTEGER(), server_default=sa.text("nextval('units_unit_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('unit_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('unit_code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('unit_name', name='units_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('fees',
    sa.Column('fee_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('student', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('transaction_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('transaction_no', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['student'], ['users.admission_no'], name='fees_student_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('fee_id', name='fees_pkey')
    )
    op.create_table('notifications',
    sa.Column('notification_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('subject', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('notification_id', name='notifications_pkey')
    )
    op.create_table('campuses',
    sa.Column('campus_id', sa.INTEGER(), server_default=sa.text("nextval('campuses_campus_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('campus_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('campus_location', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('campus_id', name='campuses_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('subjects',
    sa.Column('subject_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('student', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('unit', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['student'], ['users.admission_no'], name='subjects_student_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['unit'], ['units.unit_name'], name='subjects_unit_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['year'], ['academic_year.year_id'], name='subjects_year_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('subject_id', name='subjects_pkey')
    )
    op.create_table('institutions',
    sa.Column('institution_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('institution_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('institution_name', name='institutions_pkey')
    )
    op.create_table('checklist',
    sa.Column('checklist_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('student', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('department', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('course', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('certificate', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('campus', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('hostel', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['campus'], ['campuses.campus_id'], name='checklist_campus_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['certificate'], ['certificates.certificate_id'], name='checklist_certificate_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['course'], ['courses.course_name'], name='checklist_course_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['department'], ['departments.department_name'], name='checklist_department_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['hostel'], ['hostels.hostel_name'], name='checklist_hostel_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student'], ['users.admission_no'], name='checklist_student_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['year'], ['academic_year.year_id'], name='checklist_year_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('checklist_id', name='checklist_pkey')
    )
    op.create_table('certificates',
    sa.Column('certificate_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('certificate_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('certificate_id', name='certificates_pkey')
    )
    op.create_table('users',
    sa.Column('user_id', sa.INTEGER(), server_default=sa.text("nextval('users_user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('firstname', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('lastname', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('surname', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('admission_no', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('gender', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_confirmed', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('confirmed_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('admission_no', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('accommodation',
    sa.Column('accommodation_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('student', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hostel', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hostel'], ['hostels.hostel_name'], name='accommodation_hostel_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student'], ['users.admission_no'], name='accommodation_student_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('accommodation_id', name='accommodation_pkey')
    )
    op.create_table('exams',
    sa.Column('exam_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('student', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('unit', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('marks', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('exam_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['student'], ['users.admission_no'], name='exams_student_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['unit'], ['units.unit_name'], name='exams_unit_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['year'], ['academic_year.year_id'], name='exams_year_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('exam_id', name='exams_pkey')
    )
    op.create_table('library',
    sa.Column('book_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('student', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('author', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('book_no', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['student'], ['users.admission_no'], name='library_student_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('book_id', name='library_pkey')
    )
    op.create_table('departments',
    sa.Column('department_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('department_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('department_name', name='departments_pkey')
    )
    op.create_table('hostels',
    sa.Column('hostel_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('hostel_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('rooms', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('gender', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hostel_location', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('hostel_name', name='hostels_pkey')
    )
    # ### end Alembic commands ###
